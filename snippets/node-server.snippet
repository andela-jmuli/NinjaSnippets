'use strict';
const express = require('express');
const logger = require('morgan');
const bodyParser = require('body-parser');
const session = require('express-session');
const mongoose = require('mongoose');
const MongoStore = require('connect-mongo')(session);
const bluebird = require('bluebird');
const path = require('path');
const {config, connect } = require('./server/config');
const routes = require('./server/routes');
const app = express();

// Add mongoose promises using bluebird
mongoose.Promise = bluebird;

// connect to moongose database
connect(config.env.db);

app.use(express.static(path.join(__dirname, './public')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(session({
  secret: config.env.secret_key,
  store: new MongoStore({
    url: config.env.db
  }),
  proxy: true,
  resave: true,
  saveUninitialized: true
}));

// mount routes

routes(app, config);

app.get('/*', (req, res) => {
  // res.sendFile('index.html', {
  //   root: './public'
  // });
});


app.listen(config.port || 3000);
console.log(`Listening on port ${config.port} in ${app.get('env')} mode`);

module.exports = app;

